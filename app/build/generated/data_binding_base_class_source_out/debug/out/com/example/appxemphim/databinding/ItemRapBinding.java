// Generated by view binder compiler. Do not edit!
package com.example.appxemphim.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appxemphim.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRapBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView arrowIcon;

  @NonNull
  public final TextView rapAddress;

  @NonNull
  public final TextView rapDistance;

  @NonNull
  public final ImageView rapIcon;

  @NonNull
  public final TextView rapName;

  private ItemRapBinding(@NonNull LinearLayout rootView, @NonNull ImageView arrowIcon,
      @NonNull TextView rapAddress, @NonNull TextView rapDistance, @NonNull ImageView rapIcon,
      @NonNull TextView rapName) {
    this.rootView = rootView;
    this.arrowIcon = arrowIcon;
    this.rapAddress = rapAddress;
    this.rapDistance = rapDistance;
    this.rapIcon = rapIcon;
    this.rapName = rapName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRapBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_rap, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrowIcon;
      ImageView arrowIcon = ViewBindings.findChildViewById(rootView, id);
      if (arrowIcon == null) {
        break missingId;
      }

      id = R.id.rapAddress;
      TextView rapAddress = ViewBindings.findChildViewById(rootView, id);
      if (rapAddress == null) {
        break missingId;
      }

      id = R.id.rapDistance;
      TextView rapDistance = ViewBindings.findChildViewById(rootView, id);
      if (rapDistance == null) {
        break missingId;
      }

      id = R.id.rap_icon;
      ImageView rapIcon = ViewBindings.findChildViewById(rootView, id);
      if (rapIcon == null) {
        break missingId;
      }

      id = R.id.rapName;
      TextView rapName = ViewBindings.findChildViewById(rootView, id);
      if (rapName == null) {
        break missingId;
      }

      return new ItemRapBinding((LinearLayout) rootView, arrowIcon, rapAddress, rapDistance,
          rapIcon, rapName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
